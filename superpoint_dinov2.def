Bootstrap: docker
From: nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

%environment
    export LC_ALL=C
    export PATH=/opt/conda/bin:$PATH
    export TCNN_CUDA_ARCHITECTURES=86
    # Set CUDA architectures for A100 (8.0) and TITAN RTX (7.5)
    export TORCH_CUDA_ARCH_LIST="7.5;8.0"
    export CUDA_NVCC_FLAGS="-gencode arch=compute_75,code=sm_75 -gencode arch=compute_80,code=sm_80"
    export PATH=/usr/local/cuda/bin:$PATH
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/lib:$LD_LIBRARY_PATH
    export CUDA_HOME=/usr/local/cuda

%environment
    export LC_ALL=C
    export PATH=/opt/conda/bin:$PATH
    


%post
    # Install system dependencies
    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common

    add-apt-repository universe
    add-apt-repository multiverse

    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            git \
            wget \
            curl \
            tar \
            ninja-build \
            build-essential \
            pkg-config \
            gcc \
            g++ \
            python3-dev \
            python3-opencv\
            libsm6 \
            libxext6 \
            libx11-6 \
            libffi-dev \
            libgl1-mesa-glx \
            libglib2.0-0 \
            libavcodec-dev \
            libavformat-dev \
            libswscale-dev \
            libgstreamer-plugins-base1.0-dev \
            libgstreamer1.0-dev \
            libgtk2.0-dev \
            libgtk-3-dev \
            libglib2.0-0 \
            libxrender-dev \
            libpng-dev \
            libjpeg-dev \
            libopenexr-dev \
            libtiff-dev \
            libwebp-dev \
            xorg \
            x11-apps \
            xauth \
            xvfb \
            xinit \
            libglfw3 \
            libglfw3-dev \
            libopengl0 \
            libgl1-mesa-dri \
            libassimp-dev \
            libeigen3-dev \
            libflann-dev \
            pybind11-dev \
            mesa-utils \
            x11-xserver-utils \
            libavutil-dev \
            strace \
            lsof \
            tightvncserver \
            libosmesa6-dev \
            && rm -rf /var/lib/apt/lists/*

    
    

    # Install Miniconda
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
    bash ~/miniconda.sh -b -p /opt/conda
    rm ~/miniconda.sh
    
    # Add conda to path and initilazing
    export PATH=/opt/conda/bin:$PATH
    conda init
    . /opt/conda/etc/profile.d/conda.sh 

    
    # Create conda environment
    conda create -n dinov2 python=3.9 -y
    
    # Activate conda environment
    . /opt/conda/etc/profile.d/conda.sh
    conda activate dinov2

    # Install PyTorch with CUDA support
    conda install pytorch=2.0 torchvision pytorch-cuda=11.8 -c pytorch -c nvidia -y
    # Install build dependencies
    pip install ninja

    # Clone DINOv2 repository
    git clone https://github.com/facebookresearch/dinov2.git 
    cd dinov2

    # Install base requirements
    pip install -r requirements.txt

    # Install extra requirements for dense tasks
    pip install -r requirements-extras.txt
    # Install Other dependecies for dev.
    pip install opencv-python
    pip install numpy matplotlib scikit-learn pillow pandas seaborn 
    conda install -c anaconda ipykernel
    conda install jupyter
    pip install scikit-image imageio plotly
    
    conda install -c pytorch faiss-cpu=1.9.0
    
    pip install scipy
  
    pip install transformers

    # add current env to 
    python -m ipykernel install --user --name=dinov2
    # Clean up
    conda clean -afy
    pip cache purge
    rm -rf /opt/v0.0.18.tar.gz

%runscript
    conda init
    . /opt/conda/etc/profile.d/conda.sh
    conda activate dinov2

%labels
    Author Kaan Karakose
    Version v1.0
    Description DINOv2 container with PyTorch 2.0 